<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="portfolioMapper">
	<!-- 메인페이지 추천맨토 -->
	<select id="getRecommendList" resultType="portfolio">
	    SELECT PTF_NO, INTRODUCE, USER_NAME, SUBCATEGORY_NAME, A.FILE_PATH, MTO_NO, AVG(R.SCORE) AS scoreAvg, A.CHANGE_NAME
	    FROM PORTFOLIO P
	    JOIN MEMBER M ON MTO_NO = USER_NO
	    JOIN SUB_CATEGORY C ON P.SUBCATEGORY_NO = C.SUBCATEGORY_NO
	    JOIN REVIEW R ON PTF_NO = REF_PNO
	    LEFT JOIN ATTACHMENT A ON REF_BNO = PTF_NO
	    WHERE M.STATUS='Y' AND FILE_LEVEL = 1 AND P.STATUS = 'Y' AND R.STATUS = 'Y'
	    GROUP BY PTF_NO, INTRODUCE, USER_NAME, SUBCATEGORY_NAME, A.FILE_PATH, MTO_NO, A.CHANGE_NAME
	    ORDER BY SCOREAVG DESC
	</select>
	
	<!-- 메인페이지 실시간 리뷰 -->
	<select id="getLiveReviewList" resultType="review">
		SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, SCORE, MT.USER_NAME AS MTO_NAME,
		M.USER_NAME AS MTE_NAME, R.CREATE_DATE, SUBCATEGORY_NAME, CHANGE_NAME
		FROM REVIEW R
		JOIN PORTFOLIO P ON PTF_NO = REF_PNO
		JOIN MEMBER M USING (USER_NO)
		JOIN MEMBER MT ON P.MTO_NO = MT.USER_NO
		JOIN SUB_CATEGORY S ON P.SUBCATEGORY_NO = S.SUBCATEGORY_NO
		JOIN ATTACHMENT A ON A.REF_BNO = P.PTF_NO
		WHERE A.FILE_TYPE = 2 AND R.STATUS = 'Y'
		ORDER BY R.CREATE_DATE
	</select>
	
	<!-- 리뷰 불러오기 -->
	<select id="getReviewList" resultType="review">
		SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, SCORE, MT.USER_NAME AS MTO_NAME,
		M.USER_NAME AS MTE_NAME, M.USER_NO, R.CREATE_DATE, SUBCATEGORY_NAME
		FROM REVIEW R
		JOIN PORTFOLIO P ON PTF_NO = REF_PNO
		JOIN MEMBER M ON R.USER_NO = M.USER_NO
		JOIN MEMBER MT ON P.MTO_NO = MT.USER_NO
		JOIN SUB_CATEGORY S ON P.SUBCATEGORY_NO = S.SUBCATEGORY_NO
		WHERE R.REF_PNO = #{refPno}
		ORDER BY R.CREATE_DATE DESC
	</select>
	
	<!-- 리뷰 작성 -->
	<insert id="insertReview" parameterType="review">
		INSERT INTO REVIEW
		VALUES (SEQ_REVNO.NEXTVAL, #{reviewTitle}, #{reviewContent}, SYSDATE, NULL, 'Y', #{refPno}, #{userNo}, #{score})
	</insert>
	
	<!-- 멘토 마이페이지 불러오기 -->
	<select id="mentorGetPortfolio" resultType="portfolio">
	SELECT
	P.PTF_NO, P.INTRODUCE, P.PTF_CONTENT, P.STATUS, P.MTO_NO, SD.SIDO_NAME, SG.SIGUNGU_NAME, B.CATEGORY_NAME, S.SUBCATEGORY_NAME,
	AVG(R.SCORE) AS AVERAGE_SCORE,
	COUNT(DISTINCT R.REVIEW_NO) AS REVIEW_COUNT,
	COUNT(DISTINCT CASE WHEN RQ.REQUEST_NO IS NOT NULL THEN RQ.REQUEST_NO END) AS REQUEST_COUNT
	FROM PORTFOLIO P
	LEFT JOIN REVIEW R ON R.REF_PNO = P.PTF_NO AND R.STATUS = 'Y'
	LEFT JOIN REQUEST RQ ON RQ.MTO_NO = P.MTO_NO AND RQ.STATUS = 'Y'
	LEFT JOIN SUB_CATEGORY S ON S.SUBCATEGORY_NO = P.SUBCATEGORY_NO
	LEFT JOIN BIG_CATEGORY B ON S.REF_CATEGORY_NO = B.CATEGORY_NO
	LEFT JOIN SIGUNGU SG ON SG.SIGUNGU_NO = P.SIGUNGU_NO
	LEFT JOIN SIDO SD ON SD.SIDO_NO = SG.SIDO_NO
	WHERE P.MTO_NO = #{mtoNo}
	GROUP BY P.PTF_NO, P.INTRODUCE, P.PTF_CONTENT, P.STATUS, P.MTO_NO, SD.SIDO_NAME, SG.SIGUNGU_NAME, B.CATEGORY_NAME, S.SUBCATEGORY_NAME
	</select>
	
	<!-- 포트폴리오 신규 등록 -->
	<insert id="insertPortfolio">
		INSERT INTO PORTFOLIO
		VALUES(SEQ_PNO.NEXTVAL, #{introduce}, #{ptfContent}, #{sigunguNo}, SYSDATE, NULL, #{status}, #{mtoNo}, #{subCategoryNo})
	</insert>
	
	<!-- 포트폴리오 수정 -->
	<update id="updatePortfolio">
		UPDATE PORTFOLIO
		SET INTRODUCE = #{introduce},
			PTF_CONTENT = #{ptfContent},
			SIGUNGU_NO = #{sigunguNo},
			MODIFY_DATE = SYSDATE,
			STATUS = #{status},
			SUBCATEGORY_NO = #{subCategoryNo}
		WHERE MTO_NO = #{mtoNo}
	</update>
	
	<!-- 맨토 포트폴리오 불러오기 -->
	<select id="getPortfolio" resultType="portfolio">
		SELECT PTF_NO, INTRODUCE, PTF_CONTENT, P.STATUS, P.MTO_NO, SIDO_NAME, SIGUNGU_NAME,
		B.CATEGORY_NAME, S.SUBCATEGORY_NAME,
		COALESCE(AVG(R.SCORE), 0) AS AVERAGE_SCORE,
		COALESCE(COUNT(R.REVIEW_NO), 0) AS REVIEW_COUNT,
		COUNT(DISTINCT CASE WHEN RQ.REQUEST_NO IS NOT NULL THEN RQ.REQUEST_NO END) AS REQUEST_COUNT
		FROM PORTFOLIO P
		JOIN SUB_CATEGORY S ON S.SUBCATEGORY_NO = P.SUBCATEGORY_NO
		JOIN BIG_CATEGORY B ON S.REF_CATEGORY_NO = B.CATEGORY_NO
		LEFT JOIN REVIEW R ON R.REF_PNO = PTF_NO AND R.STATUS = 'Y'
		LEFT JOIN REQUEST RQ ON RQ.MTO_NO = P.MTO_NO AND RQ.STATUS = 'Y'
		LEFT JOIN CHATROOM C ON C.MTO_NO = P.MTO_NO
		LEFT JOIN SIGUNGU SG ON SG.SIGUNGU_NO = P.SIGUNGU_NO
		LEFT JOIN SIDO SD ON SD.SIDO_NO = SG.SIDO_NO
		WHERE P.PTF_NO = #{ptfNo}
		GROUP BY PTF_NO, INTRODUCE, PTF_CONTENT, P.STATUS, P.MTO_NO, SIDO_NAME, SIGUNGU_NAME, B.CATEGORY_NAME, S.SUBCATEGORY_NAME, C.ROOM_NO
	</select>
	
	<!-- 리뷰몰아보기 상세페이지 -->
	<select id="reviewDetailCount" resultType="int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE STATUS='Y'
	</select>
	
	<select id="ReviewDetail" resultType="review">
	SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, SCORE, MT.USER_NAME AS MTO_NAME,
	M.USER_NAME AS MTE_NAME, M.USER_NO, R.CREATE_DATE, SUBCATEGORY_NAME
	FROM REVIEW R
	JOIN PORTFOLIO P ON PTF_NO = REF_PNO
	JOIN MEMBER M ON R.USER_NO = M.USER_NO
	JOIN MEMBER MT ON P.MTO_NO = MT.USER_NO
	JOIN SUB_CATEGORY S ON P.SUBCATEGORY_NO = S.SUBCATEGORY_NO
	WHERE R.REVIEW_NO = #{reviewNo}
	ORDER BY R.CREATE_DATE DESC
	</select>
	
	<select id="getReview" resultType="review">
		SELECT USER_NO
		FROM REVIEW
		WHERE USER_NO = #{userNo} AND REF_PNO = #{refPno}
	</select>
</mapper>
